{"ast":null,"code":"function loadDevTools(callback) {\n  // check URL first\n  var url = new URL(window.location.toString());\n  var setInUrl = url.searchParams.has('dev-tools');\n  var urlEnabled = url.searchParams.get('dev-tools') === 'true';\n  if (setInUrl) {\n    return urlEnabled ? go() : callback();\n  }\n\n  // we only want isolated pages to have it if the query param is set\n  if (url.pathname.startsWith('/isolated')) return callback();\n\n  // the check localStorage\n  var localStorageValue = window.localStorage.getItem('dev-tools');\n  var setInLocalStorage = localStorageValue != undefined;\n  var localStorageEnabled = localStorageValue === 'true';\n  if (setInLocalStorage) {\n    return localStorageEnabled ? go() : callback();\n  }\n\n  // the default is off in Cypress\n  if (window.hasOwnProperty('Cypress')) return callback();\n\n  // the default is on in development\n  if (process.env.NODE_ENV === 'development') return go();\n  return callback();\n  function go() {\n    // use a dynamic import so the dev-tools code isn't bundled with the regular\n    // app code so we don't worry about bundle size.\n    import('./dev-tools.js').then(function (devTools) {\n      return devTools.install();\n    })[\"finally\"](callback);\n  }\n}\n\n/*\neslint\n  eqeqeq: \"off\",\n*/\n\nexport { loadDevTools };","map":{"version":3,"names":["loadDevTools","callback","url","URL","window","location","toString","setInUrl","searchParams","has","urlEnabled","get","go","pathname","startsWith","localStorageValue","localStorage","getItem","setInLocalStorage","undefined","localStorageEnabled","hasOwnProperty","process","env","NODE_ENV","then","devTools","install"],"sources":["/Users/marielsgtzz/Desktop/react-fundamentals/node_modules/@kentcdodds/react-workshop-app/dev-tools-build/dist/esm/load.js"],"sourcesContent":["function loadDevTools(callback) {\n  // check URL first\n  const url = new URL(window.location.toString());\n  const setInUrl = url.searchParams.has('dev-tools');\n  const urlEnabled = url.searchParams.get('dev-tools') === 'true';\n  if (setInUrl) {\n    return urlEnabled ? go() : callback();\n  }\n\n  // we only want isolated pages to have it if the query param is set\n  if (url.pathname.startsWith('/isolated')) return callback();\n\n  // the check localStorage\n  const localStorageValue = window.localStorage.getItem('dev-tools');\n  const setInLocalStorage = localStorageValue != undefined;\n  const localStorageEnabled = localStorageValue === 'true';\n  if (setInLocalStorage) {\n    return localStorageEnabled ? go() : callback();\n  }\n\n  // the default is off in Cypress\n  if (window.hasOwnProperty('Cypress')) return callback();\n\n  // the default is on in development\n  if (process.env.NODE_ENV === 'development') return go();\n  return callback();\n  function go() {\n    // use a dynamic import so the dev-tools code isn't bundled with the regular\n    // app code so we don't worry about bundle size.\n    import('./dev-tools.js').then(devTools => devTools.install()).finally(callback);\n  }\n}\n\n/*\neslint\n  eqeqeq: \"off\",\n*/\n\nexport { loadDevTools };\n"],"mappings":"AAAA,SAASA,YAAY,CAACC,QAAQ,EAAE;EAC9B;EACA,IAAMC,GAAG,GAAG,IAAIC,GAAG,CAACC,MAAM,CAACC,QAAQ,CAACC,QAAQ,EAAE,CAAC;EAC/C,IAAMC,QAAQ,GAAGL,GAAG,CAACM,YAAY,CAACC,GAAG,CAAC,WAAW,CAAC;EAClD,IAAMC,UAAU,GAAGR,GAAG,CAACM,YAAY,CAACG,GAAG,CAAC,WAAW,CAAC,KAAK,MAAM;EAC/D,IAAIJ,QAAQ,EAAE;IACZ,OAAOG,UAAU,GAAGE,EAAE,EAAE,GAAGX,QAAQ,EAAE;EACvC;;EAEA;EACA,IAAIC,GAAG,CAACW,QAAQ,CAACC,UAAU,CAAC,WAAW,CAAC,EAAE,OAAOb,QAAQ,EAAE;;EAE3D;EACA,IAAMc,iBAAiB,GAAGX,MAAM,CAACY,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAClE,IAAMC,iBAAiB,GAAGH,iBAAiB,IAAII,SAAS;EACxD,IAAMC,mBAAmB,GAAGL,iBAAiB,KAAK,MAAM;EACxD,IAAIG,iBAAiB,EAAE;IACrB,OAAOE,mBAAmB,GAAGR,EAAE,EAAE,GAAGX,QAAQ,EAAE;EAChD;;EAEA;EACA,IAAIG,MAAM,CAACiB,cAAc,CAAC,SAAS,CAAC,EAAE,OAAOpB,QAAQ,EAAE;;EAEvD;EACA,IAAIqB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE,OAAOZ,EAAE,EAAE;EACvD,OAAOX,QAAQ,EAAE;EACjB,SAASW,EAAE,GAAG;IACZ;IACA;IACA,MAAM,CAAC,gBAAgB,CAAC,CAACa,IAAI,CAAC,UAAAC,QAAQ;MAAA,OAAIA,QAAQ,CAACC,OAAO,EAAE;IAAA,EAAC,WAAQ,CAAC1B,QAAQ,CAAC;EACjF;AACF;;AAEA;AACA;AACA;AACA;;AAEA,SAASD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}