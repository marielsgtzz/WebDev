{"ast":null,"code":"import { useContext, useState, useCallback, createElement, useMemo } from 'react';\nimport { createNamedContext, noop, useForceUpdate, usePrevious, useIsomorphicLayoutEffect } from '@reach/utils';\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction createDescendantContext(name, initialValue) {\n  if (initialValue === void 0) {\n    initialValue = {};\n  }\n  var descendants = [];\n  return createNamedContext(name, _extends({\n    descendants: descendants,\n    registerDescendant: noop,\n    unregisterDescendant: noop\n  }, initialValue));\n}\n/**\n * This hook registers our descendant by passing it into an array. We can then\n * search that array by to find its index when registering it in the component.\n * We use this for focus management, keyboard navigation, and typeahead\n * functionality for some components.\n *\n * The hook accepts the element node and (optionally) a key. The key is useful\n * if multiple descendants have identical text values and we need to\n * differentiate siblings for some reason.\n *\n * Our main goals with this are:\n *   1) maximum composability,\n *   2) minimal API friction\n *   3) SSR compatibility*\n *   4) concurrent safe\n *   5) index always up-to-date with the tree despite changes\n *   6) works with memoization of any component in the tree (hopefully)\n *\n * * As for SSR, the good news is that we don't actually need the index on the\n * server for most use-cases, as we are only using it to determine the order of\n * composed descendants for keyboard navigation. However, in the few cases where\n * this is not the case, we can require an explicit index from the app.\n */\n\nfunction useDescendant(descendant, context, indexProp) {\n  var forceUpdate = useForceUpdate();\n  var _React$useContext = useContext(context),\n    registerDescendant = _React$useContext.registerDescendant,\n    unregisterDescendant = _React$useContext.unregisterDescendant,\n    descendants = _React$useContext.descendants; // This will initially return -1 because we haven't registered the descendant\n  // on the first render. After we register, this will then return the correct\n  // index on the following render and we will re-register descendants\n  // so that everything is up-to-date before the user interacts with a\n  // collection.\n\n  var index = indexProp != null ? indexProp : descendants.findIndex(function (item) {\n    return item.element === descendant.element;\n  });\n  var previousDescendants = usePrevious(descendants); // We also need to re-register descendants any time ANY of the other\n  // descendants have changed. My brain was melting when I wrote this and it\n  // feels a little off, but checking in render and using the result in the\n  // effect's dependency array works well enough.\n\n  var someDescendantsHaveChanged = descendants.some(function (descendant, index) {\n    var _previousDescendants$;\n    return descendant.element !== (previousDescendants == null ? void 0 : (_previousDescendants$ = previousDescendants[index]) == null ? void 0 : _previousDescendants$.element);\n  }); // Prevent any flashing\n\n  useIsomorphicLayoutEffect(function () {\n    if (!descendant.element) forceUpdate();\n    registerDescendant(_extends({}, descendant, {\n      index: index\n    }));\n    return function () {\n      return unregisterDescendant(descendant.element);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [forceUpdate, index, registerDescendant, someDescendantsHaveChanged, unregisterDescendant].concat(Object.values(descendant)));\n  return index;\n}\nfunction useDescendantsInit() {\n  return useState([]);\n}\nfunction useDescendants(ctx) {\n  return useContext(ctx).descendants;\n}\nfunction DescendantProvider(_ref) {\n  var Ctx = _ref.context,\n    children = _ref.children,\n    items = _ref.items,\n    set = _ref.set;\n  var registerDescendant = useCallback(function (_ref2) {\n    var element = _ref2.element,\n      explicitIndex = _ref2.index,\n      rest = _objectWithoutPropertiesLoose(_ref2, [\"element\", \"index\"]);\n    if (!element) {\n      return;\n    }\n    set(function (items) {\n      var newItems;\n      if (explicitIndex != null) {\n        newItems = [].concat(items, [_extends({}, rest, {\n          element: element,\n          index: explicitIndex\n        })]);\n      } else if (items.length === 0) {\n        // If there are no items, register at index 0 and bail.\n        newItems = [].concat(items, [_extends({}, rest, {\n          element: element,\n          index: 0\n        })]);\n      } else if (items.find(function (item) {\n        return item.element === element;\n      })) {\n        // If the element is already registered, just use the same array\n        newItems = items;\n      } else {\n        // When registering a descendant, we need to make sure we insert in\n        // into the array in the same order that it appears in the DOM. So as\n        // new descendants are added or maybe some are removed, we always know\n        // that the array is up-to-date and correct.\n        //\n        // So here we look at our registered descendants and see if the new\n        // element we are adding appears earlier than an existing descendant's\n        // DOM node via `node.compareDocumentPosition`. If it does, we insert\n        // the new element at this index. Because `registerDescendant` will be\n        // called in an effect every time the descendants state value changes,\n        // we should be sure that this index is accurate when descendent\n        // elements come or go from our component.\n        var index = items.findIndex(function (item) {\n          if (!item.element || !element) {\n            return false;\n          } // Does this element's DOM node appear before another item in the\n          // array in our DOM tree? If so, return true to grab the index at\n          // this point in the array so we know where to insert the new\n          // element.\n\n          return Boolean(item.element.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_PRECEDING);\n        });\n        var newItem = _extends({}, rest, {\n          element: element,\n          index: index\n        }); // If an index is not found we will push the element to the end.\n\n        if (index === -1) {\n          newItems = [].concat(items, [newItem]);\n        } else {\n          newItems = [].concat(items.slice(0, index), [newItem], items.slice(index));\n        }\n      }\n      return newItems.map(function (item, index) {\n        return _extends({}, item, {\n          index: index\n        });\n      });\n    });\n  },\n  // set is a state setter initialized by the useDescendantsInit hook.\n  // We can safely ignore the lint warning here because it will not change\n  // between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  var unregisterDescendant = useCallback(function (element) {\n    if (!element) {\n      return;\n    }\n    set(function (items) {\n      return items.filter(function (item) {\n        return element !== item.element;\n      });\n    });\n  },\n  // set is a state setter initialized by the useDescendantsInit hook.\n  // We can safely ignore the lint warning here because it will not change\n  // between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  return /*#__PURE__*/createElement(Ctx.Provider, {\n    value: useMemo(function () {\n      return {\n        descendants: items,\n        registerDescendant: registerDescendant,\n        unregisterDescendant: unregisterDescendant\n      };\n    }, [items, registerDescendant, unregisterDescendant])\n  }, children);\n}\n/**\n * Testing this as an abstraction for compound components that use keyboard\n * navigation. Hoping this will help us prevent bugs and mismatched behavior\n * across various components, but it may also prove to be too messy of an\n * abstraction in the end.\n *\n * Currently used in:\n *   - Tabs\n *   - Accordion\n *\n * @param context\n * @param options\n */\n\nfunction useDescendantKeyDown(context, options) {\n  var _React$useContext2 = useContext(context),\n    descendants = _React$useContext2.descendants;\n  var callback = options.callback,\n    currentIndex = options.currentIndex,\n    filter = options.filter,\n    _options$key = options.key,\n    key = _options$key === void 0 ? \"index\" : _options$key,\n    _options$orientation = options.orientation,\n    orientation = _options$orientation === void 0 ? \"vertical\" : _options$orientation,\n    _options$rotate = options.rotate,\n    rotate = _options$rotate === void 0 ? true : _options$rotate,\n    _options$rtl = options.rtl,\n    rtl = _options$rtl === void 0 ? false : _options$rtl;\n  var index = currentIndex != null ? currentIndex : -1;\n  return function handleKeyDown(event) {\n    if (![\"ArrowDown\", \"ArrowUp\", \"ArrowLeft\", \"ArrowRight\", \"PageUp\", \"PageDown\", \"Home\", \"End\"].includes(event.key)) {\n      return;\n    } // If we use a filter function, we need to re-index our descendants array\n    // so that filtered descendent elements aren't selected.\n\n    var selectableDescendants = filter ? descendants.filter(filter) : descendants; // Current index should map to the updated array vs. the original\n    // descendants array.\n\n    if (filter) {\n      index = selectableDescendants.findIndex(function (descendant) {\n        return descendant.index === currentIndex;\n      });\n    } // We need some options for any of this to work!\n\n    if (!selectableDescendants.length) {\n      return;\n    }\n    function getNextOption() {\n      var atBottom = index === selectableDescendants.length - 1;\n      return atBottom ? rotate ? getFirstOption() : selectableDescendants[index] : selectableDescendants[(index + 1) % selectableDescendants.length];\n    }\n    function getPreviousOption() {\n      var atTop = index === 0;\n      return atTop ? rotate ? getLastOption() : selectableDescendants[index] : selectableDescendants[(index - 1 + selectableDescendants.length) % selectableDescendants.length];\n    }\n    function getFirstOption() {\n      return selectableDescendants[0];\n    }\n    function getLastOption() {\n      return selectableDescendants[selectableDescendants.length - 1];\n    }\n    switch (event.key) {\n      case \"ArrowDown\":\n        if (orientation === \"vertical\" || orientation === \"both\") {\n          event.preventDefault();\n          var next = getNextOption();\n          callback(key === \"option\" ? next : next[key]);\n        }\n        break;\n      case \"ArrowUp\":\n        if (orientation === \"vertical\" || orientation === \"both\") {\n          event.preventDefault();\n          var prev = getPreviousOption();\n          callback(key === \"option\" ? prev : prev[key]);\n        }\n        break;\n      case \"ArrowLeft\":\n        if (orientation === \"horizontal\" || orientation === \"both\") {\n          event.preventDefault();\n          var nextOrPrev = (rtl ? getNextOption : getPreviousOption)();\n          callback(key === \"option\" ? nextOrPrev : nextOrPrev[key]);\n        }\n        break;\n      case \"ArrowRight\":\n        if (orientation === \"horizontal\" || orientation === \"both\") {\n          event.preventDefault();\n          var prevOrNext = (rtl ? getPreviousOption : getNextOption)();\n          callback(key === \"option\" ? prevOrNext : prevOrNext[key]);\n        }\n        break;\n      case \"PageUp\":\n        event.preventDefault();\n        var prevOrFirst = (event.ctrlKey ? getPreviousOption : getFirstOption)();\n        callback(key === \"option\" ? prevOrFirst : prevOrFirst[key]);\n        break;\n      case \"Home\":\n        event.preventDefault();\n        var first = getFirstOption();\n        callback(key === \"option\" ? first : first[key]);\n        break;\n      case \"PageDown\":\n        event.preventDefault();\n        var nextOrLast = (event.ctrlKey ? getNextOption : getLastOption)();\n        callback(key === \"option\" ? nextOrLast : nextOrLast[key]);\n        break;\n      case \"End\":\n        event.preventDefault();\n        var last = getLastOption();\n        callback(key === \"option\" ? last : last[key]);\n        break;\n    }\n  };\n} ////////////////////////////////////////////////////////////////////////////////\n\nexport { DescendantProvider, createDescendantContext, useDescendant, useDescendantKeyDown, useDescendants, useDescendantsInit };","map":{"version":3,"names":["useContext","useState","useCallback","createElement","useMemo","createNamedContext","noop","useForceUpdate","usePrevious","useIsomorphicLayoutEffect","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","createDescendantContext","name","initialValue","descendants","registerDescendant","unregisterDescendant","useDescendant","descendant","context","indexProp","forceUpdate","_React$useContext","index","findIndex","item","element","previousDescendants","someDescendantsHaveChanged","some","_previousDescendants$","concat","values","useDescendantsInit","useDescendants","ctx","DescendantProvider","_ref","Ctx","children","items","set","_ref2","explicitIndex","rest","newItems","find","Boolean","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","newItem","slice","map","filter","Provider","value","useDescendantKeyDown","options","_React$useContext2","callback","currentIndex","_options$key","_options$orientation","orientation","_options$rotate","rotate","_options$rtl","rtl","handleKeyDown","event","includes","selectableDescendants","getNextOption","atBottom","getFirstOption","getPreviousOption","atTop","getLastOption","preventDefault","next","prev","nextOrPrev","prevOrNext","prevOrFirst","ctrlKey","first","nextOrLast","last"],"sources":["/Users/marielsgtzz/Desktop/react-fundamentals/node_modules/@reach/descendants/dist/reach-descendants.esm.js"],"sourcesContent":["import { useContext, useState, useCallback, createElement, useMemo } from 'react';\nimport { createNamedContext, noop, useForceUpdate, usePrevious, useIsomorphicLayoutEffect } from '@reach/utils';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction createDescendantContext(name, initialValue) {\n  if (initialValue === void 0) {\n    initialValue = {};\n  }\n\n  var descendants = [];\n  return createNamedContext(name, _extends({\n    descendants: descendants,\n    registerDescendant: noop,\n    unregisterDescendant: noop\n  }, initialValue));\n}\n/**\n * This hook registers our descendant by passing it into an array. We can then\n * search that array by to find its index when registering it in the component.\n * We use this for focus management, keyboard navigation, and typeahead\n * functionality for some components.\n *\n * The hook accepts the element node and (optionally) a key. The key is useful\n * if multiple descendants have identical text values and we need to\n * differentiate siblings for some reason.\n *\n * Our main goals with this are:\n *   1) maximum composability,\n *   2) minimal API friction\n *   3) SSR compatibility*\n *   4) concurrent safe\n *   5) index always up-to-date with the tree despite changes\n *   6) works with memoization of any component in the tree (hopefully)\n *\n * * As for SSR, the good news is that we don't actually need the index on the\n * server for most use-cases, as we are only using it to determine the order of\n * composed descendants for keyboard navigation. However, in the few cases where\n * this is not the case, we can require an explicit index from the app.\n */\n\n\nfunction useDescendant(descendant, context, indexProp) {\n  var forceUpdate = useForceUpdate();\n\n  var _React$useContext = useContext(context),\n      registerDescendant = _React$useContext.registerDescendant,\n      unregisterDescendant = _React$useContext.unregisterDescendant,\n      descendants = _React$useContext.descendants; // This will initially return -1 because we haven't registered the descendant\n  // on the first render. After we register, this will then return the correct\n  // index on the following render and we will re-register descendants\n  // so that everything is up-to-date before the user interacts with a\n  // collection.\n\n\n  var index = indexProp != null ? indexProp : descendants.findIndex(function (item) {\n    return item.element === descendant.element;\n  });\n  var previousDescendants = usePrevious(descendants); // We also need to re-register descendants any time ANY of the other\n  // descendants have changed. My brain was melting when I wrote this and it\n  // feels a little off, but checking in render and using the result in the\n  // effect's dependency array works well enough.\n\n  var someDescendantsHaveChanged = descendants.some(function (descendant, index) {\n    var _previousDescendants$;\n\n    return descendant.element !== (previousDescendants == null ? void 0 : (_previousDescendants$ = previousDescendants[index]) == null ? void 0 : _previousDescendants$.element);\n  }); // Prevent any flashing\n\n  useIsomorphicLayoutEffect(function () {\n    if (!descendant.element) forceUpdate();\n    registerDescendant(_extends({}, descendant, {\n      index: index\n    }));\n    return function () {\n      return unregisterDescendant(descendant.element);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [forceUpdate, index, registerDescendant, someDescendantsHaveChanged, unregisterDescendant].concat(Object.values(descendant)));\n  return index;\n}\n\nfunction useDescendantsInit() {\n  return useState([]);\n}\n\nfunction useDescendants(ctx) {\n  return useContext(ctx).descendants;\n}\n\nfunction DescendantProvider(_ref) {\n  var Ctx = _ref.context,\n      children = _ref.children,\n      items = _ref.items,\n      set = _ref.set;\n  var registerDescendant = useCallback(function (_ref2) {\n    var element = _ref2.element,\n        explicitIndex = _ref2.index,\n        rest = _objectWithoutPropertiesLoose(_ref2, [\"element\", \"index\"]);\n\n    if (!element) {\n      return;\n    }\n\n    set(function (items) {\n      var newItems;\n\n      if (explicitIndex != null) {\n        newItems = [].concat(items, [_extends({}, rest, {\n          element: element,\n          index: explicitIndex\n        })]);\n      } else if (items.length === 0) {\n        // If there are no items, register at index 0 and bail.\n        newItems = [].concat(items, [_extends({}, rest, {\n          element: element,\n          index: 0\n        })]);\n      } else if (items.find(function (item) {\n        return item.element === element;\n      })) {\n        // If the element is already registered, just use the same array\n        newItems = items;\n      } else {\n        // When registering a descendant, we need to make sure we insert in\n        // into the array in the same order that it appears in the DOM. So as\n        // new descendants are added or maybe some are removed, we always know\n        // that the array is up-to-date and correct.\n        //\n        // So here we look at our registered descendants and see if the new\n        // element we are adding appears earlier than an existing descendant's\n        // DOM node via `node.compareDocumentPosition`. If it does, we insert\n        // the new element at this index. Because `registerDescendant` will be\n        // called in an effect every time the descendants state value changes,\n        // we should be sure that this index is accurate when descendent\n        // elements come or go from our component.\n        var index = items.findIndex(function (item) {\n          if (!item.element || !element) {\n            return false;\n          } // Does this element's DOM node appear before another item in the\n          // array in our DOM tree? If so, return true to grab the index at\n          // this point in the array so we know where to insert the new\n          // element.\n\n\n          return Boolean(item.element.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_PRECEDING);\n        });\n\n        var newItem = _extends({}, rest, {\n          element: element,\n          index: index\n        }); // If an index is not found we will push the element to the end.\n\n\n        if (index === -1) {\n          newItems = [].concat(items, [newItem]);\n        } else {\n          newItems = [].concat(items.slice(0, index), [newItem], items.slice(index));\n        }\n      }\n\n      return newItems.map(function (item, index) {\n        return _extends({}, item, {\n          index: index\n        });\n      });\n    });\n  }, // set is a state setter initialized by the useDescendantsInit hook.\n  // We can safely ignore the lint warning here because it will not change\n  // between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  var unregisterDescendant = useCallback(function (element) {\n    if (!element) {\n      return;\n    }\n\n    set(function (items) {\n      return items.filter(function (item) {\n        return element !== item.element;\n      });\n    });\n  }, // set is a state setter initialized by the useDescendantsInit hook.\n  // We can safely ignore the lint warning here because it will not change\n  // between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  return /*#__PURE__*/createElement(Ctx.Provider, {\n    value: useMemo(function () {\n      return {\n        descendants: items,\n        registerDescendant: registerDescendant,\n        unregisterDescendant: unregisterDescendant\n      };\n    }, [items, registerDescendant, unregisterDescendant])\n  }, children);\n}\n/**\n * Testing this as an abstraction for compound components that use keyboard\n * navigation. Hoping this will help us prevent bugs and mismatched behavior\n * across various components, but it may also prove to be too messy of an\n * abstraction in the end.\n *\n * Currently used in:\n *   - Tabs\n *   - Accordion\n *\n * @param context\n * @param options\n */\n\n\nfunction useDescendantKeyDown(context, options) {\n  var _React$useContext2 = useContext(context),\n      descendants = _React$useContext2.descendants;\n\n  var callback = options.callback,\n      currentIndex = options.currentIndex,\n      filter = options.filter,\n      _options$key = options.key,\n      key = _options$key === void 0 ? \"index\" : _options$key,\n      _options$orientation = options.orientation,\n      orientation = _options$orientation === void 0 ? \"vertical\" : _options$orientation,\n      _options$rotate = options.rotate,\n      rotate = _options$rotate === void 0 ? true : _options$rotate,\n      _options$rtl = options.rtl,\n      rtl = _options$rtl === void 0 ? false : _options$rtl;\n  var index = currentIndex != null ? currentIndex : -1;\n  return function handleKeyDown(event) {\n    if (![\"ArrowDown\", \"ArrowUp\", \"ArrowLeft\", \"ArrowRight\", \"PageUp\", \"PageDown\", \"Home\", \"End\"].includes(event.key)) {\n      return;\n    } // If we use a filter function, we need to re-index our descendants array\n    // so that filtered descendent elements aren't selected.\n\n\n    var selectableDescendants = filter ? descendants.filter(filter) : descendants; // Current index should map to the updated array vs. the original\n    // descendants array.\n\n    if (filter) {\n      index = selectableDescendants.findIndex(function (descendant) {\n        return descendant.index === currentIndex;\n      });\n    } // We need some options for any of this to work!\n\n\n    if (!selectableDescendants.length) {\n      return;\n    }\n\n    function getNextOption() {\n      var atBottom = index === selectableDescendants.length - 1;\n      return atBottom ? rotate ? getFirstOption() : selectableDescendants[index] : selectableDescendants[(index + 1) % selectableDescendants.length];\n    }\n\n    function getPreviousOption() {\n      var atTop = index === 0;\n      return atTop ? rotate ? getLastOption() : selectableDescendants[index] : selectableDescendants[(index - 1 + selectableDescendants.length) % selectableDescendants.length];\n    }\n\n    function getFirstOption() {\n      return selectableDescendants[0];\n    }\n\n    function getLastOption() {\n      return selectableDescendants[selectableDescendants.length - 1];\n    }\n\n    switch (event.key) {\n      case \"ArrowDown\":\n        if (orientation === \"vertical\" || orientation === \"both\") {\n          event.preventDefault();\n          var next = getNextOption();\n          callback(key === \"option\" ? next : next[key]);\n        }\n\n        break;\n\n      case \"ArrowUp\":\n        if (orientation === \"vertical\" || orientation === \"both\") {\n          event.preventDefault();\n          var prev = getPreviousOption();\n          callback(key === \"option\" ? prev : prev[key]);\n        }\n\n        break;\n\n      case \"ArrowLeft\":\n        if (orientation === \"horizontal\" || orientation === \"both\") {\n          event.preventDefault();\n          var nextOrPrev = (rtl ? getNextOption : getPreviousOption)();\n          callback(key === \"option\" ? nextOrPrev : nextOrPrev[key]);\n        }\n\n        break;\n\n      case \"ArrowRight\":\n        if (orientation === \"horizontal\" || orientation === \"both\") {\n          event.preventDefault();\n          var prevOrNext = (rtl ? getPreviousOption : getNextOption)();\n          callback(key === \"option\" ? prevOrNext : prevOrNext[key]);\n        }\n\n        break;\n\n      case \"PageUp\":\n        event.preventDefault();\n        var prevOrFirst = (event.ctrlKey ? getPreviousOption : getFirstOption)();\n        callback(key === \"option\" ? prevOrFirst : prevOrFirst[key]);\n        break;\n\n      case \"Home\":\n        event.preventDefault();\n        var first = getFirstOption();\n        callback(key === \"option\" ? first : first[key]);\n        break;\n\n      case \"PageDown\":\n        event.preventDefault();\n        var nextOrLast = (event.ctrlKey ? getNextOption : getLastOption)();\n        callback(key === \"option\" ? nextOrLast : nextOrLast[key]);\n        break;\n\n      case \"End\":\n        event.preventDefault();\n        var last = getLastOption();\n        callback(key === \"option\" ? last : last[key]);\n        break;\n    }\n  };\n} ////////////////////////////////////////////////////////////////////////////////\n\nexport { DescendantProvider, createDescendantContext, useDescendant, useDescendantKeyDown, useDescendants, useDescendantsInit };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}